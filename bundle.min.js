/******/ (function(modules) { // webpackBootstrap
/******/ 	// The module cache
/******/ 	var installedModules = {};
/******/
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/
/******/ 		// Check if module is in cache
/******/ 		if(installedModules[moduleId]) {
/******/ 			return installedModules[moduleId].exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			i: moduleId,
/******/ 			l: false,
/******/ 			exports: {}
/******/ 		};
/******/
/******/ 		// Execute the module function
/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);
/******/
/******/ 		// Flag the module as loaded
/******/ 		module.l = true;
/******/
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/
/******/
/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = modules;
/******/
/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = installedModules;
/******/
/******/ 	// define getter function for harmony exports
/******/ 	__webpack_require__.d = function(exports, name, getter) {
/******/ 		if(!__webpack_require__.o(exports, name)) {
/******/ 			Object.defineProperty(exports, name, { enumerable: true, get: getter });
/******/ 		}
/******/ 	};
/******/
/******/ 	// define __esModule on exports
/******/ 	__webpack_require__.r = function(exports) {
/******/ 		if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 			Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 		}
/******/ 		Object.defineProperty(exports, '__esModule', { value: true });
/******/ 	};
/******/
/******/ 	// create a fake namespace object
/******/ 	// mode & 1: value is a module id, require it
/******/ 	// mode & 2: merge all properties of value into the ns
/******/ 	// mode & 4: return value when already ns object
/******/ 	// mode & 8|1: behave like require
/******/ 	__webpack_require__.t = function(value, mode) {
/******/ 		if(mode & 1) value = __webpack_require__(value);
/******/ 		if(mode & 8) return value;
/******/ 		if((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;
/******/ 		var ns = Object.create(null);
/******/ 		__webpack_require__.r(ns);
/******/ 		Object.defineProperty(ns, 'default', { enumerable: true, value: value });
/******/ 		if(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));
/******/ 		return ns;
/******/ 	};
/******/
/******/ 	// getDefaultExport function for compatibility with non-harmony modules
/******/ 	__webpack_require__.n = function(module) {
/******/ 		var getter = module && module.__esModule ?
/******/ 			function getDefault() { return module['default']; } :
/******/ 			function getModuleExports() { return module; };
/******/ 		__webpack_require__.d(getter, 'a', getter);
/******/ 		return getter;
/******/ 	};
/******/
/******/ 	// Object.prototype.hasOwnProperty.call
/******/ 	__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };
/******/
/******/ 	// __webpack_public_path__
/******/ 	__webpack_require__.p = "";
/******/
/******/
/******/ 	// Load entry module and return exports
/******/ 	return __webpack_require__(__webpack_require__.s = 0);
/******/ })
/************************************************************************/
/******/ ([
/* 0 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
// ESM COMPAT FLAG
__webpack_require__.r(__webpack_exports__);

// CONCATENATED MODULE: ./src/scss/main.scss
// extracted by mini-css-extract-plugin

// CONCATENATED MODULE: ./src/js/app.js

const inputs = document.querySelectorAll(".calculator__up-input");
const app_submit = document.querySelector(".calculator__up-form-submit");
const spanYear = document.querySelector(".year");
const spanDay = document.querySelector(".day");
const spanMonth = document.querySelector(".month");
const checkYears = () => {
  let values = [];
  inputs.forEach((el) => {
    values.push(el.value);
  });
  if (values.length === 3) {
    const currentMonth = new Date().getMonth() + 1;
    const currentDay = new Date().getDate();
    const currentYear = new Date().getFullYear();
    const months = [
      "31",
      "28",
      "31",
      "30",
      "31",
      "30",
      "31",
      "31",
      "30",
      "31",
      "30",
      "31",
    ];
    const day = Number(values[0]);
    const month = Number(values[1]);
    const year = Number(values[2]);
    if (year / 4) {
      months[1] === "29";
    }
    if (day > currentDay && month > currentMonth && year > currentYear) {
      window.alert("Please enter the correct date!");
      return;
    } else if (
      day >= currentDay &&
      month > currentMonth &&
      year === currentYear
    ) {
      window.alert("Please enter the correct date!");
      return;
    } else if (
      day >= currentDay &&
      month === currentMonth &&
      year === currentYear
    ) {
      window.alert("Please enter the correct date!");
      return;
    } else if (
      (day === currentDay || day > currentDay || day < currentDay) &&
      month > currentMonth &&
      year === currentYear
    ) {
      window.alert("Please enter the correct date!");
    } else if (Number(months[month - 1]) < day || day < 0) {
      window.alert("Please enter the correct date!");
      return;
    } else if (month > 12 || month < 0) {
      window.alert("Please enter the correct date!");
      return;
    } else if (currentYear < year || year < 0) {
      window.alert("Please enter the correct date!");
      return;
    }
    let countedYear = 0;
    let countedMonth = 0;
    let countedDay = 0;
    if (currentMonth >= month) {
      countedMonth = currentMonth - month;
      countedYear = currentYear - year;
    } else if (month > currentMonth) {
      const toEndOfYear = 12 - month;
      countedMonth = toEndOfYear + currentMonth;
      countedYear = currentYear - year - 1;
    }
    if (currentDay > day) {
      countedDay = currentDay - day;
    } else if (day > currentDay) {
      countedMonth = countedMonth - 1;
      const numberOfDays = Number(months[month - 1]);
      countedDay = numberOfDays - day + currentDay;
    }
    spanDay.textContent = countedDay;
    spanMonth.textContent = countedMonth;
    spanYear.textContent = countedYear;
  }
};
const checkErrors = () => {
  let errors = 0;
  let inputsNumber = 0;
  inputs.forEach((input) => {
    if (!input.value) {
      input.classList.add("calculator__up-input-error");
      input.nextElementSibling.style.display = "block";
      app_submit.classList.add("top");
      input.previousElementSibling.classList.add(
        "calculator__up-form-label-error"
      );
      inputsNumber = inputsNumber + 1;
      errors = errors + 1;
    } else if (input.value) {
      input.classList.remove("calculator__up-input-error");
      app_submit.classList.remove("top");
      input.nextElementSibling.style.display = "none";
      input.previousElementSibling.classList.remove(
        "calculator__up-form-label-error"
      );
      inputsNumber = inputsNumber + 1;
    }
    if (inputsNumber === 3) {
      if (errors === 0) {
        checkYears();
      }
    }
  });
};
app_submit.addEventListener("click", (e) => {
  e.preventDefault();
  checkErrors();
});


/***/ })
/******/ ]);
//# sourceMappingURL=bundle.min.js.map